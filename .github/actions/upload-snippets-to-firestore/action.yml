name: "Update Snippet Codes"
description: "Uploads or updates Firestore snippets based on changed files."
inputs:
  FILES:
    description: "A multi-line string containing file paths to upload to Firestore, each path on a new line. Note: Multiple lines cannot be passed via env, so FILES is passed as an input instead."
    required: true 

runs:
  using: "composite"
  steps:
    - name: Process and Upload Files to Firestore
      shell: bash
      env:
        ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}
        FIREBASE_PROJECT_ID: ${{ env.FIREBASE_PROJECT_ID }}
        FIRESTORE_TEST_SNIPPETS_COLLECTION: ${{ env.FIRESTORE_TEST_SNIPPETS_COLLECTION }}
        FIRESTORE_CODEDETAILS_DOCUMENT: ${{ env.FIRESTORE_CODEDETAILS_DOCUMENT }}
        MIN_IOS_VERSION: ${{ env.MIN_IOS_VERSION }}
        FILES: ${{ inputs.FILES }}

      run: |
        # \n을 기준으로 파일 목록을 분리합니다. 
        IFS=$'\n'

        for FILE in $FILES; do
          if [ -f "$FILE" ]; then
            echo "Contents of $FILE without comments:"

            DOCUMENT=$(echo "$FILE" | sed -E 's|.*/||; s|\.swift$||' | awk '{print tolower(substr($0,1,1)) substr($0,2)}')
            echo "Document name is $DOCUMENT"

            # Delete lines that start with // (comments)
            # Escape backslash (\)
            CODE=$(sed -E '/^\/\//d; s/\\/\\\\/g' "$FILE")

            # Escape double quotes (")
            CODE=$(echo "$CODE" | sed -E 's/"/\\"/g')

            FIRESTORE_READ_UPDATE_URL="https://firestore.googleapis.com/v1/projects/$FIREBASE_PROJECT_ID/databases/(default)/documents/$FIRESTORE_TEST_SNIPPETS_COLLECTION/$DOCUMENT/$MIN_IOS_VERSION/$FIRESTORE_CODEDETAILS_DOCUMENT"
            FIRESTORE_CREATE_URL="https://firestore.googleapis.com/v1/projects/$FIREBASE_PROJECT_ID/databases/(default)/documents/$FIRESTORE_TEST_SNIPPETS_COLLECTION/$DOCUMENT/$MIN_IOS_VERSION?documentId=$FIRESTORE_CODEDETAILS_DOCUMENT"

            RESPONSE=$(curl -s \
              -o /dev/null \
              -w "%{http_code}" \
              -H "Authorization: Bearer $ACCESS_TOKEN" \
              "$FIRESTORE_READ_UPDATE_URL")

            echo "Response: $RESPONSE"

            if [ "$RESPONSE" -eq 200 ]; then
              curl -X PATCH \
              -H "Authorization: Bearer $ACCESS_TOKEN" \
              -H "Content-Type: application/json" \
              "$FIRESTORE_READ_UPDATE_URL" \
              -d '{
                "fields": {
                  "code": {
                    "stringValue": "'"${CODE}"'"
                  }
                }
              }' || exit 1
              echo "Document updated with PATCH."
            else
              curl -X POST \
              -H "Authorization: Bearer $ACCESS_TOKEN" \
              -H "Content-Type: application/json" \
              "$FIRESTORE_CREATE_URL" \
              -d '{
                "fields": {
                  "code": {
                    "stringValue": "'"${CODE}"'"
                  }
                }
              }' || exit 1
              echo "Document created with POST."
            fi
          else
            echo "File $FILE does not exist."
          fi
        done
